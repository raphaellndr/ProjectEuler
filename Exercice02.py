############ EXERCICE 2 ############


"""

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

"""


def even_fibonacci_numbers(limit):
    """
    Function that return the sum of the even-valued terms in the Fibonacci sequence
    that are lower than the limit.

    :param limit: value that can't be exceeded by the Fibonacci sequence's terms.
    :return:
    """
    sum_even_numbers = 0
    n_minus_2 = 1  # first term
    n_minus_1 = 2  # second term
    for i in range(limit):
        fibo = n_minus_2 + n_minus_1
        if fibo % 2 == 0 and sum_even_numbers <= 4000000:
            sum_even_numbers += fibo
        n_minus_2 = n_minus_1
        n_minus_1 = fibo
    return sum_even_numbers + 2  # because of the first term
